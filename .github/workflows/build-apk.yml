name: Build APK

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Expo and EAS CLI
        run: npm install -g @expo/cli@latest eas-cli@latest

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Setup EAS project
        run: |
          cd frontend
          # Create fresh EAS config to avoid linking issues
          echo '{
            "cli": {
              "version": ">= 16.19.3",
              "appVersionSource": "remote"
            },
            "build": {
              "development": {
                "developmentClient": true,
                "distribution": "internal"
              },
              "preview": {
                "distribution": "internal",
                "android": {
                  "buildType": "apk"
                }
              },
              "production": {
                "autoIncrement": true
              },
              "apk": {
                "android": {
                  "buildType": "apk"
                }
              }
            },
            "submit": {
              "production": {}
            }
          }' > eas.json
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build APK with EAS
        run: |
          cd frontend
          eas build --platform android --profile apk --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Download APK
        run: |
          cd frontend
          BUILD_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          if [ "$BUILD_URL" != "null" ]; then
            curl -L -o UniSafe.apk "$BUILD_URL"
          else
            echo "Failed to get build URL"
            exit 1
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: frontend/UniSafe.apk
          name: UniSafe ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
