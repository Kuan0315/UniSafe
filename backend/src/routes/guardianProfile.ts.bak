import express from 'express';
import Guardian from '../models/Guardian'; // your Guardian model
import { verifyToken } from '../middleware/auth'; // JWT auth middleware

const router = express.Router();

// GET guardian profile by email (from token)
router.get('/profile', verifyToken, async (req, res) => {
    try {
        const email = req.user.email; // email from decoded JWT
        const guardian = await Guardian.findOne({ email }).select('-password'); // exclude password
        if (!guardian) return res.status(404).json({ message: 'Guardian not found' });

        res.json(guardian);
    } catch (err) {
        console.error(err);
        res.status(500).json({ message: 'Server error' });
    }
});

// POST update guardian profile
router.post('/profile', verifyToken, async (req, res) => {
    try {
        const email = req.user.email; // email from token
        const { name, relationship, phoneNumber, studentEmail, avatar } = req.body;

        const guardian = await Guardian.findOne({ email });
        if (!guardian) return res.status(404).json({ message: 'Guardian not found' });

        // Update fields
        guardian.name = name || guardian.name;
        guardian.relationship = relationship || guardian.relationship;
        guardian.phoneNumber = phoneNumber || guardian.phoneNumber;
        guardian.studentEmail = studentEmail || guardian.studentEmail;
        guardian.avatar = avatar || guardian.avatar;

        await guardian.save();

        res.json(guardian);
    } catch (err) {
        console.error(err);
        res.status(500).json({ message: 'Server error' });
    }
});

export default router;
